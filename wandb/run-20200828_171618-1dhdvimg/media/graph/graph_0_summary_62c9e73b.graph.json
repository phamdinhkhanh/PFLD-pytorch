{"format": "torch", "nodes": [{"name": "features.0.0", "id": 140550160468624, "class_name": "Conv2d(3, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)", "parameters": [["weight", [8, 3, 3, 3]]], "output_shape": [[32, 8, 112, 112]], "num_parameters": [216]}, {"name": "features.0.1", "id": 140550161689064, "class_name": "BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [8]], ["bias", [8]]], "output_shape": [[32, 8, 112, 112]], "num_parameters": [8, 8]}, {"name": "features.0.2", "id": 140551889207704, "class_name": "h_swish(\n  (sigmoid): h_sigmoid(\n    (relu): ReLU6(inplace=True)\n  )\n)", "parameters": [], "output_shape": [[32, 8, 112, 112]], "num_parameters": []}, {"name": "features.1", "id": 140549427151032, "class_name": "InvertedResidual(\n  (conv): Sequential(\n    (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=8, bias=False)\n    (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n    (3): SELayer(\n      (avg_pool): AdaptiveAvgPool2d(output_size=1)\n      (fc): Sequential(\n        (0): Linear(in_features=8, out_features=8, bias=True)\n        (1): ReLU(inplace=True)\n        (2): Linear(in_features=8, out_features=8, bias=True)\n        (3): h_sigmoid(\n          (relu): ReLU6(inplace=True)\n        )\n      )\n    )\n    (4): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n)", "parameters": [["conv.0.weight", [8, 1, 3, 3]], ["conv.1.weight", [8]], ["conv.1.bias", [8]], ["conv.3.fc.0.weight", [8, 8]], ["conv.3.fc.0.bias", [8]], ["conv.3.fc.2.weight", [8, 8]], ["conv.3.fc.2.bias", [8]], ["conv.4.weight", [16, 8, 1, 1]], ["conv.5.weight", [16]], ["conv.5.bias", [16]]], "output_shape": [[32, 16, 112, 112]], "num_parameters": [72, 8, 8, 64, 8, 64, 8, 128, 16, 16]}, {"name": "features.2", "id": 140549427152992, "class_name": "InvertedResidual(\n  (conv): Sequential(\n    (0): Conv2d(16, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(72, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=72, bias=False)\n    (4): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): Identity()\n    (6): ReLU(inplace=True)\n    (7): Conv2d(72, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (8): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n)", "parameters": [["conv.0.weight", [72, 16, 1, 1]], ["conv.1.weight", [72]], ["conv.1.bias", [72]], ["conv.3.weight", [72, 1, 3, 3]], ["conv.4.weight", [72]], ["conv.4.bias", [72]], ["conv.7.weight", [24, 72, 1, 1]], ["conv.8.weight", [24]], ["conv.8.bias", [24]]], "output_shape": [[32, 24, 56, 56]], "num_parameters": [1152, 72, 72, 648, 72, 72, 1728, 24, 24]}, {"name": "features.3", "id": 140549427154000, "class_name": "InvertedResidual(\n  (conv): Sequential(\n    (0): Conv2d(24, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n    (3): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)\n    (4): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): Identity()\n    (6): ReLU(inplace=True)\n    (7): Conv2d(88, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (8): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n)", "parameters": [["conv.0.weight", [88, 24, 1, 1]], ["conv.1.weight", [88]], ["conv.1.bias", [88]], ["conv.3.weight", [88, 1, 3, 3]], ["conv.4.weight", [88]], ["conv.4.bias", [88]], ["conv.7.weight", [24, 88, 1, 1]], ["conv.8.weight", [24]], ["conv.8.bias", [24]]], "output_shape": [[32, 24, 56, 56]], "num_parameters": [2112, 88, 88, 792, 88, 88, 2112, 24, 24]}, {"name": "features.4", "id": 140549427091160, "class_name": "InvertedResidual(\n  (conv): Sequential(\n    (0): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (3): Conv2d(96, 96, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=96, bias=False)\n    (4): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): SELayer(\n      (avg_pool): AdaptiveAvgPool2d(output_size=1)\n      (fc): Sequential(\n        (0): Linear(in_features=96, out_features=24, bias=True)\n        (1): ReLU(inplace=True)\n        (2): Linear(in_features=24, out_features=96, bias=True)\n        (3): h_sigmoid(\n          (relu): ReLU6(inplace=True)\n        )\n      )\n    )\n    (6): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (7): Conv2d(96, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (8): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n)", "parameters": [["conv.0.weight", [96, 24, 1, 1]], ["conv.1.weight", [96]], ["conv.1.bias", [96]], ["conv.3.weight", [96, 1, 5, 5]], ["conv.4.weight", [96]], ["conv.4.bias", [96]], ["conv.5.fc.0.weight", [24, 96]], ["conv.5.fc.0.bias", [24]], ["conv.5.fc.2.weight", [96, 24]], ["conv.5.fc.2.bias", [96]], ["conv.7.weight", [40, 96, 1, 1]], ["conv.8.weight", [40]], ["conv.8.bias", [40]]], "output_shape": [[32, 40, 28, 28]], "num_parameters": [2304, 96, 96, 2400, 96, 96, 2304, 24, 2304, 96, 3840, 40, 40]}, {"name": "features.5", "id": 140549411763928, "class_name": "InvertedResidual(\n  (conv): Sequential(\n    (0): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (3): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)\n    (4): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): SELayer(\n      (avg_pool): AdaptiveAvgPool2d(output_size=1)\n      (fc): Sequential(\n        (0): Linear(in_features=240, out_features=64, bias=True)\n        (1): ReLU(inplace=True)\n        (2): Linear(in_features=64, out_features=240, bias=True)\n        (3): h_sigmoid(\n          (relu): ReLU6(inplace=True)\n        )\n      )\n    )\n    (6): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (7): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (8): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n)", "parameters": [["conv.0.weight", [240, 40, 1, 1]], ["conv.1.weight", [240]], ["conv.1.bias", [240]], ["conv.3.weight", [240, 1, 5, 5]], ["conv.4.weight", [240]], ["conv.4.bias", [240]], ["conv.5.fc.0.weight", [64, 240]], ["conv.5.fc.0.bias", [64]], ["conv.5.fc.2.weight", [240, 64]], ["conv.5.fc.2.bias", [240]], ["conv.7.weight", [40, 240, 1, 1]], ["conv.8.weight", [40]], ["conv.8.bias", [40]]], "output_shape": [[32, 40, 28, 28]], "num_parameters": [9600, 240, 240, 6000, 240, 240, 15360, 64, 15360, 240, 9600, 40, 40]}, {"name": "features.6", "id": 140549411765888, "class_name": "InvertedResidual(\n  (conv): Sequential(\n    (0): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (3): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)\n    (4): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): SELayer(\n      (avg_pool): AdaptiveAvgPool2d(output_size=1)\n      (fc): Sequential(\n        (0): Linear(in_features=240, out_features=64, bias=True)\n        (1): ReLU(inplace=True)\n        (2): Linear(in_features=64, out_features=240, bias=True)\n        (3): h_sigmoid(\n          (relu): ReLU6(inplace=True)\n        )\n      )\n    )\n    (6): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (7): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (8): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n)", "parameters": [["conv.0.weight", [240, 40, 1, 1]], ["conv.1.weight", [240]], ["conv.1.bias", [240]], ["conv.3.weight", [240, 1, 5, 5]], ["conv.4.weight", [240]], ["conv.4.bias", [240]], ["conv.5.fc.0.weight", [64, 240]], ["conv.5.fc.0.bias", [64]], ["conv.5.fc.2.weight", [240, 64]], ["conv.5.fc.2.bias", [240]], ["conv.7.weight", [40, 240, 1, 1]], ["conv.8.weight", [40]], ["conv.8.bias", [40]]], "output_shape": [[32, 40, 28, 28]], "num_parameters": [9600, 240, 240, 6000, 240, 240, 15360, 64, 15360, 240, 9600, 40, 40]}, {"name": "features.7", "id": 140549411501672, "class_name": "InvertedResidual(\n  (conv): Sequential(\n    (0): Conv2d(40, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (3): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n    (4): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): SELayer(\n      (avg_pool): AdaptiveAvgPool2d(output_size=1)\n      (fc): Sequential(\n        (0): Linear(in_features=120, out_features=32, bias=True)\n        (1): ReLU(inplace=True)\n        (2): Linear(in_features=32, out_features=120, bias=True)\n        (3): h_sigmoid(\n          (relu): ReLU6(inplace=True)\n        )\n      )\n    )\n    (6): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (7): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (8): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n)", "parameters": [["conv.0.weight", [120, 40, 1, 1]], ["conv.1.weight", [120]], ["conv.1.bias", [120]], ["conv.3.weight", [120, 1, 5, 5]], ["conv.4.weight", [120]], ["conv.4.bias", [120]], ["conv.5.fc.0.weight", [32, 120]], ["conv.5.fc.0.bias", [32]], ["conv.5.fc.2.weight", [120, 32]], ["conv.5.fc.2.bias", [120]], ["conv.7.weight", [48, 120, 1, 1]], ["conv.8.weight", [48]], ["conv.8.bias", [48]]], "output_shape": [[32, 48, 28, 28]], "num_parameters": [4800, 120, 120, 3000, 120, 120, 3840, 32, 3840, 120, 5760, 48, 48]}, {"name": "features.8", "id": 140549411503632, "class_name": "InvertedResidual(\n  (conv): Sequential(\n    (0): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (3): Conv2d(144, 144, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=144, bias=False)\n    (4): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): SELayer(\n      (avg_pool): AdaptiveAvgPool2d(output_size=1)\n      (fc): Sequential(\n        (0): Linear(in_features=144, out_features=40, bias=True)\n        (1): ReLU(inplace=True)\n        (2): Linear(in_features=40, out_features=144, bias=True)\n        (3): h_sigmoid(\n          (relu): ReLU6(inplace=True)\n        )\n      )\n    )\n    (6): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (7): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (8): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n)", "parameters": [["conv.0.weight", [144, 48, 1, 1]], ["conv.1.weight", [144]], ["conv.1.bias", [144]], ["conv.3.weight", [144, 1, 5, 5]], ["conv.4.weight", [144]], ["conv.4.bias", [144]], ["conv.5.fc.0.weight", [40, 144]], ["conv.5.fc.0.bias", [40]], ["conv.5.fc.2.weight", [144, 40]], ["conv.5.fc.2.bias", [144]], ["conv.7.weight", [48, 144, 1, 1]], ["conv.8.weight", [48]], ["conv.8.bias", [48]]], "output_shape": [[32, 48, 28, 28]], "num_parameters": [6912, 144, 144, 3600, 144, 144, 5760, 40, 5760, 144, 6912, 48, 48]}, {"name": "conv2", "id": 140549411642784, "class_name": "Conv2d(48, 64, kernel_size=(1, 1), stride=(1, 1))", "parameters": [["weight", [64, 48, 1, 1]], ["bias", [64]]], "output_shape": [[32, 64, 28, 28]], "num_parameters": [3072, 64]}, {"name": "block1", "id": 140549411643288, "class_name": "InvertedResidual(\n  (conv): Sequential(\n    (0): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): BatchNorm2d(49, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (3): Conv2d(49, 49, kernel_size=(2, 2), stride=(2, 2), groups=49, bias=False)\n    (4): BatchNorm2d(49, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (5): SELayer(\n      (avg_pool): AdaptiveAvgPool2d(output_size=1)\n      (fc): Sequential(\n        (0): Linear(in_features=49, out_features=16, bias=True)\n        (1): ReLU(inplace=True)\n        (2): Linear(in_features=16, out_features=49, bias=True)\n        (3): h_sigmoid(\n          (relu): ReLU6(inplace=True)\n        )\n      )\n    )\n    (6): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (7): Conv2d(49, 49, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (8): BatchNorm2d(49, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n)", "parameters": [["conv.0.weight", [49, 64, 1, 1]], ["conv.1.weight", [49]], ["conv.1.bias", [49]], ["conv.3.weight", [49, 1, 2, 2]], ["conv.4.weight", [49]], ["conv.4.bias", [49]], ["conv.5.fc.0.weight", [16, 49]], ["conv.5.fc.0.bias", [16]], ["conv.5.fc.2.weight", [49, 16]], ["conv.5.fc.2.bias", [49]], ["conv.7.weight", [49, 49, 1, 1]], ["conv.8.weight", [49]], ["conv.8.bias", [49]]], "output_shape": [[32, 49, 14, 14]], "num_parameters": [3136, 49, 49, 196, 49, 49, 784, 16, 784, 49, 2401, 49, 49]}, {"name": "block2", "id": 140549411251592, "class_name": "InvertedResidual(\n  (conv): Sequential(\n    (0): Conv2d(49, 49, kernel_size=(2, 2), stride=(2, 2), groups=49, bias=False)\n    (1): BatchNorm2d(49, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): h_swish(\n      (sigmoid): h_sigmoid(\n        (relu): ReLU6(inplace=True)\n      )\n    )\n    (3): SELayer(\n      (avg_pool): AdaptiveAvgPool2d(output_size=1)\n      (fc): Sequential(\n        (0): Linear(in_features=49, out_features=16, bias=True)\n        (1): ReLU(inplace=True)\n        (2): Linear(in_features=16, out_features=49, bias=True)\n        (3): h_sigmoid(\n          (relu): ReLU6(inplace=True)\n        )\n      )\n    )\n    (4): Conv2d(49, 49, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (5): BatchNorm2d(49, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n)", "parameters": [["conv.0.weight", [49, 1, 2, 2]], ["conv.1.weight", [49]], ["conv.1.bias", [49]], ["conv.3.fc.0.weight", [16, 49]], ["conv.3.fc.0.bias", [16]], ["conv.3.fc.2.weight", [49, 16]], ["conv.3.fc.2.bias", [49]], ["conv.4.weight", [49, 49, 1, 1]], ["conv.5.weight", [49]], ["conv.5.bias", [49]]], "output_shape": [[32, 49, 7, 7]], "num_parameters": [196, 49, 49, 784, 16, 784, 49, 2401, 49, 49]}, {"name": "avgpool2", "id": 140549411643120, "class_name": "AvgPool2d(kernel_size=7, stride=7, padding=0)", "parameters": [], "output_shape": [[32, 49, 1, 1]], "num_parameters": []}, {"name": "avgpool3", "id": 140549411643176, "class_name": "AvgPool2d(kernel_size=3, stride=3, padding=0)", "parameters": [], "output_shape": [[32, 49, 2, 2]], "num_parameters": []}, {"name": "conv3", "id": 140549411643064, "class_name": "Conv2d(49, 49, kernel_size=(7, 7), stride=(1, 1))", "parameters": [["weight", [49, 49, 7, 7]], ["bias", [49]]], "output_shape": [[32, 49, 1, 1]], "num_parameters": [117649, 49]}, {"name": "fc", "id": 140549411643232, "class_name": "Linear(in_features=294, out_features=196, bias=True)", "parameters": [["weight", [196, 294]], ["bias", [196]]], "output_shape": [[32, 196]], "num_parameters": [57624, 196]}], "edges": []}